@model ComplianceAuditWeb.Models.BranchViewModel
@using System.Configuration;
@{
    ViewBag.Title = "Assign/Delete Vendor";
}
@section scripts{

    <script language="javascript" type="text/javascript">
        function GetCompany(_Groupcompid) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#CompanyID").html(procemessage).show();
            var url = "/Common/getcompany";

            $.ajax({
                url: url,
                data: { groupcompid: _Groupcompid },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Company</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#CompanyID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    </script>

    <script language="javascript" type="text/javascript">
        function GetBranch(_CompanyId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#BranchID").html(procemessage).show();
            var url = "/Common/getspecificbranchdropdown";

            $.ajax({
                url: url,
                data: { compid: _CompanyId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Branch</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#BranchID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        }
    </script>

    <script language="javascript" type="text/javascript">
        function GetVendor(_branchid) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#VendorID").html(procemessage).show();
            var url = "/Common/getspecificvendors";
            var _companyid = $("#CompanyID").val();

            $.ajax({
                url: url,

                data: { compid: _companyid, branchid: _branchid },

                cache: false,
                type: "POST",
                success: function (data) {
                    //var markup = "<option='0'>Select Vendor</option>";
                    var markup = "";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#VendorID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
            GetVendorAssociatedwithBranch(_branchid);

        }
    </script>
    <script language="javascript" type="text/javascript">
        function GetVendorAssociatedwithBranch(_branchid) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#assignedID").html(procemessage).show();
            var url = "/Common/getspecificvendorsassociatedwithbranch";

            $.ajax({
                url: url,

                data: { branchid: _branchid },

                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option='0'>Select Vendor</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#assignedID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        }
    </script>

    <script language="javascript" type="text/javascript">

        $("#ShiftRight,#ShiftLeft").click(function (event) {
            var ID = $(event.target).attr("ID");
            var ChooseFrom = ID == "ShiftRight" ? "#VendorID" : "#assignedID";
            var moveTo = ID == "ShiftRight" ? "#assignedID" : "#VendorID";
            var SelectData = $(ChooseFrom + " :selected");
            $(moveTo).append(SelectData);
            SelectData.remove;
        });

    </script>
}

<ul class="breadcrumb ML15">
    <li><a href="/Common/dashboard?pid=9">Dashboard</a></li>
    <li>Assign/Delete Vendor </li>
</ul>
<h2 class="ML15">Assign/Delete Vendor</h2>

@*<h2 class="ML15">Add Company Branch</h2>*@

@using (Html.BeginForm())
{
    @*<div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Group Company Name", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.GroupCompanyID, Model.GroupCompaniesList, new { @class = "inputMaterial ui - autocomplete - input", @onchange = "GetCompany(this.value)" })
            </div>
        </div>*@

    if (TempData["ErrorMessage"] != null)
    {
        <p style="color:red">@TempData["ErrorMessage"]</p>

    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    if (TempData["Assigned"] != null)
    {
        <center>
            <p style="color:green">@ViewBag.AMessage</p>
        </center>
    }
    if (TempData["Deleted"] != null)
    {
        <center>

            <p style="color:green">@ViewBag.MessageDeallocated</p>
        </center>
    }

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Company Name", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.CompanyID, Model.CompaniesList, new { @class = "inputMaterial ui - autocomplete - input",
           @onchange = "GetBranch(this.value)"
       })
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Branch Name", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.BranchID, Model.BranchList, new { @class = "inputMaterial ui - autocomplete - input",
           @onchange = "GetVendor(this.value)" })
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @*@Html.Label(ConfigurationManager.AppSettings["vendors"], new { @class = "floating-label" })*@
            @Html.Label("List of available vendors")
            @Html.ListBoxFor(m => m.VendorID, Model.VendorList, new { @class = "inputMaterialSelect ui - autocomplete - input ",
           placeholder = ConfigurationManager.AppSettings["Roles"] })

        </div>
    </div>

    <div class="col-xs-1 subSelect">
        <div class="input-field">
            <input id="ShiftRight" type="button" value=">>>" />
            <input id="ShiftLeft" type="button" value="<<<" />
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">


            @Html.Label("List of assigned vendors", new { @class = "floating-label" })
            @Html.ListBoxFor(model => model.assignedID, Model.AssignedList)
            @*@Html.Label("List of Assigned items", new { @class = "floating-label" })
                @Html.ListBoxFor(model => model.currentID, Model.currentList)*@

            @Html.HiddenFor(m => m.assignedID)
            @Html.HiddenFor(m => m.VendorID)

        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @*@Html.Label(ConfigurationManager.AppSettings["vendors"], new { @class = "floating-label" })*@
            @Html.Label("Vendor Start Date")<span style="color:red">*</span>
            @Html.EditorFor(m => m.VendorStartDate, new { @class = "inputMaterialSelect ui - autocomplete - input " })


        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @*@Html.Label(ConfigurationManager.AppSettings["vendors"], new { @class = "floating-label" })*@
            @Html.Label("Vendor End Date")
            @Html.EditorFor(m => m.VendorEndDate, new { @class = "inputMaterialSelect ui - autocomplete - input " })


        </div>
    </div>

    @Html.HiddenFor(m => m.IsVendorActive);

    <div class="clearfix"></div>


    <ul class="list-inline continueBtn">
        <li>

            @*@{string button = "save";}*@
            @*@if (Model.branch.Branch_Id != 0)
                {
                    button = "Update";
                }*@



            <input type="submit" value="Save" class="btn primary-button" onclick="AssignVendorForBranch"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>

            <input type="reset" value="Reset" class="btn primary-button" onclick="AssignVendorForBranch"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
            <a href="@Url.Action("dashboard","Common",new { pid=9})" class="btn primary-button">Cancel</a>

            @*<input type="reset" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
                @Html.ActionLink("Cancel", "AddBranch", new { Orgid = Model.organization.Organization_Id }, new { @class = "btn primary-button" })*@



        </li>
    </ul>

}
