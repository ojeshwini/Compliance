@model ComplianceAuditWeb.Models.AuditentryViewModel

@section scripts{
    @*<link href="~/Content/assets/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />*@
    <script src="~/Content/assets/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <link href="~/Content/themes/base/jquery.ui.theme.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />
    @*<link href="~/Content/assets/jquery-ui-1.12.1.custom/jquery-ui.theme.css" rel="stylesheet" />*@
    <link href="~/Content/ui.jqgrid.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    @*<script src="~/Content/bootstrap-3.3.7-dist/js/jquery.min.js"></script>*@
    <script src="~/Scripts/free-jqGrid/jquery.jqgrid.min.js"></script>
    @*<link href="~/Content/themes/base/jquery.ui.datepicker.css" rel="stylesheet" />*@
    <style>
        tr.jqgrow {
            height: 80px;
        }

        .acttab a {
            color: black;
            background-color: aliceblue;
        }
    </style>

    <script>
        //<![CDATA[

        $(function () {

            "use strict";
            var cmeditTemplate = { align: 'center', sortable: false, editable: true, width: 150 };
            var cmTemplate = { align: 'center', sortable: false, editable: true, width: 150 }
            $("#grid").jqGrid({
                url: "/ManageAudit/GetAuditData/",
                datatype: "json",
                colNames: ['ID', 'compliance_Xref_id', 'auditid', 'Compliance Title', 'Description', 'Details', 'Applicability', 'Periodicity of Activity', 'Start Date', 'End Date', 'Compliance Status',
                    'Risk Category', 'Effect of Non-compliance', 'Followup audit date', 'Auditor Remarks', 'Evidences/Supportives', 'Actual_Date', 'Due Date'],
                colModel: [
                    { key: true, hidden: true, name: 'ID', frozen: true },
                    { key: false, hidden: true, name: 'compliance_Xref_id', editable: true, frozen: true },
                    { key: false, hidden: true, name: 'Compliance_Audit_Id', editable: true, frozen: true },
                    { name: "Compliance_Title", frozen: true, template: cmTemplate },
                    { name: "Description", edittype: "textarea", editoptions: { rows: "4", cols: "20" }, height: 250, frozen: true, template: cmTemplate },
                    { name: "Details", edittype: "textarea", editoptions: { rows: "4", cols: "20" }, frozen: true, template: cmTemplate },
                    {
                        name: "Applicability", editable: true, align: 'center', edittype: 'checkbox', editoptions: { value: 'Yes:No' }, defval: 'Yes'
                    },
                    { name: "Periodicity" },
                    { name: "Start_Date", editable: true, formatter: 'date' },
                    {
                        name: "End_Date", editable: true, formatter: 'date'
                        //,editoptions: {

                        //     dataInit: function (el) {
                        //         $(el).datepicker({ dateFormat: 'dd-mm-yy' });
                        //     },
                    },
                    { name: "Audit_Status", editable: true, edittype: "select", editoptions: { value: "Compliant:Compliant;Non-Compliant:Non-Compliant;Partially compliant:Partially Compliant;Not Applicable:Not Applicable" } },
                    { name: "Risk_Category", editable: true, edittype: "select", editoptions: { value: "High:High;Medium:Medium;Low:Low;None:None" } },
                    { name: "Non_compliance", editable: true, edittype: "textarea", editoptions: { rows: "4", cols: "20" } },
                    //{ name: "Audit_Date", formatter: 'date'},
                    { name: "Audit_Followup_Date", editable: true, formatter: 'date' },
                    { name: "Audit_Remarks", editable: true, edittype: "textarea", editoptions: { rows: "4", cols: "20" } },
                    {
                        name: "Evidences", editable: true, edittype: 'file',
                        editoptions: {
                            enctype: "multipart/form-data"
                        },
                    },
                    { name: "Actual_Date", editable: true, formatter: 'date' },
                    { name: "Due_Date", editable: true, formatter: 'date' }
                ],
                postData: { actid: $('#actid').val() },
                editurl: "/ManageAudit/EditAuditdata",
                caption: "Audit Entry Screen",
                viewrecords: true,
                rowNum: 16,
                width: 1250,
                rowList: [10, 20, 30],
                pager: '#pager12',
                shrinkToFit: false,
                caption: "Audit Entry",
                emptyrecords: 'No Records are Available to Display',
                height: 'auto'
                //onSelectRow: editRow
            });
            jQuery("#grid").jqGrid('setFrozenColumns');
            $("#grid").jqGrid('navGrid', '#pager12', {
                edit: false, add: false, save: false, cancel: false,
                search: false, refresh: true, del: false, view: true
            });
            $("#grid").jqGrid('inlineNav', '#pager12', {
                edit: true, add: true, save: true, cancel: true, del: false, search: false,
                editPatams: {
                    keys: false,
                    oneditfunc: null,
                    successfunc: null,
                    url: null,
                    extraParams: {
                        rowid: function () {
                            var sel_id = $("#grid").jqGrid('getGridParam', 'selrow');
                            var value = $('#grid').jqGrid('getCell', sel_id, '_id');
                            return value;
                        }
                    },
                    aftersavefunc:null,
                    errorfunc: null,
                    restoreafterfunc: null,
                    restoreAfterError: true,
                    mType: "POST"
                },
                addParams: {
                    keys: true,
                    position: 'last'
                }
            });

        });
        //]]>

        //jQuery('input[value=New Record]').click(function () {
        //    jQuery("#grid").setGridParam({ datatype: 'local', loadonce: true }); // Stop refresh?
        //    jQuery("#grid").addRowData(0, { id: "0", entryDate: getToday(), … }, "last"); // Insert blank record
        //    jQuery("#grid").editRow(0, true); // Activate record for editing
        //});

        function changeact(clicked_id) {
            var state = document.getElementById("tab1danger");
            state.style.visibility = "visible";
            var city = document.getElementById("Finalsubmit");
            city.style.visibility = "hidden";
            $.post('/Common/SetSessionVariable',
                { key: "Actid", value: clicked_id }, function (data) {
                    //alert("Success " + data.success);
                });


            //$('#actid').val(clicked_id);
            //$("#grid id").setGridParam({ postData: { actid: clicked_id } });

            $("#grid").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
        }

        function visiblediv() {

            var state = document.getElementById("tab1danger");
            state.style.visibility = "hidden";
            var city = document.getElementById("Finalsubmit");
            city.style.visibility = "visible";

        }

        function pickdates(id) {
            jQuery("#" + id + "_Start_Date", "#grid").datepicker({ dateFormat: "yy-mm-dd" });
        }

        function upload() {
            alert("called");
        }
        var lastSelection;

        function editRow(id) {
            if (id && id !== lastSelection) {
                var grid = $("#grid");
                var colContent = grid.jqGrid('getCell', id, 'myColumn');
                if (colContent.length > 0)
                    grid.setColProp('myColumn', { editable: false });
                else
                    grid.setColProp('myColumn', { editable: true });

               //var saveparameters = {
               //     "successfunc": null,
               //     "url": null,
               //    "extraparam": {},
               //    "aftersavefunc": UploadImage(),
               //     "errorfunc": null,
               //     "afterrestorefunc": null,
               //     "restoreAfterError": true,
               //     "mtype": "POST"
               // }

                grid.jqGrid('restoreRow', lastSelection);
                grid.jqGrid('editRow', id, {
                    keys: true,                    
                    onEnter: function (rowid, options, event) {
                        if (confirm("Save the row with ID: " + rowid) == true) {
                            $(this).jqGrid("saveRow", rowid, options);
                        }
                    }                 
                });
                lastSelection = id;
            }
        }

        //function saveRow(id) {
        //      var saveparameters = {
        //            "successfunc": null,
        //            "url": null,
        //           "extraparam": {},
        //           "aftersavefunc": UploadImage(),
        //            "errorfunc": null,
        //            "afterrestorefunc": null,
        //            "restoreAfterError": true,
        //            "mtype": "POST"
        //        }
        //    onEnter:  if (confirm("Save the row with ID: " + rowid) == true) {
        //            $(this).jqGrid("saveRow", rowid, saveparameters);
        //        }            
        //}

        function Upload(id) {
            alert(id);
            $('#grid').jqGrid('getCell', id, 'Evidences');
        }

        function UploadImage(response, postdata) {

            alert("called upload image");
            var data = $.parseJSON(response.responseText);
            alert(data.id);
            if (data.success == true) {
                if ($("#Evidences").val() != "") {
                   
                    ajaxFileUpload(data.id);

                }
            }

            return [data.success, data.message, data.id];

        }

        function ajaxFileUpload(id) 
{
    $("#loading")
    .ajaxStart(function () {
        $(this).show();
    })
    .ajaxComplete(function () {
        $(this).hide();
    });

    $.ajaxFileUpload
    (
        {
            url: '@Url.Action("UploadImage")',
            secureuri: false,
                fileElementId: 'Evidences',
            dataType: 'json',
            data: { id: id },
            success: function (data, status) {

                if (typeof (data.success) != 'undefined') {
                    if (data.success == true) {
                        return;
                    } else {
                        alert(data.message);
                    }
                }
                else {
                    return alert('Failed to upload logo!');
                }
            },
            error: function (data, status, e) {
                return alert('Failed to upload logo!');
            }
        }
    )          }

    </script>
    <script>
        $(function () {
            $("#tabs").tabs();
        });
    </script>

   
}

<br />
@*@using (Html.BeginForm())
{*@
    <div id="tabs">
        <ul class="nav nav-pills">
            @foreach (var item in Model.ActList)
            {
                @*<li><a href="#tab1danger">@item.Text</a></li>*@
                @*<li><button id=@item.Value onclick="javascript: changeact(this.id); ">@item.Text</button></li>*@
                @*<li><a href="">@item.Text</a></li>*@
                <li class="acttab" style="text-decoration-color:white;font-weight:bold">
                    <a id=@item.Value href="#tab1danger" onclick="changeact(this.id);">@item.Text</a>
                </li>
            }
            <li class="acttab" style="text-decoration-color:white;font-weight:bold"> <a onclick="visiblediv();">Final Submission</a></li>
        </ul>

        <div id="Finalsubmit" style="visibility:hidden">
            <form action=@Url.Action("SubmitAudit","ManageAudit",new { sdate = Model.SDate, edate = Model.EDate })>
                @Html.Label("Enter Over All Remarks ")
                @Html.TextAreaFor(model => model.Overallremarks, new { cols = 180, rows = 2 })
                <br />
                <button type="submit" class="btn primary-button" style="margin-left:10px">Submit</button>
            </form>
        </div>
        @Html.HiddenFor(model => model.actid)
        <div id="tab1danger">
            @Html.Display("ActName")
            <table id="grid"></table>
            <div id="pager12"></div>
        </div>
        <div>
            @*@using (Html.BeginForm("SubitAudit", "ManageAudit")
                {*@

            @* } *@
        </div>
    </div>

@*}*@
