@model ComplianceAuditWeb.Models.UserGroupViewModel

@{
    /**/

    ViewBag.Title = "Add UserGroup Page";
}
<ul class="breadcrumb ML15">
    <li><a href="/UserManagement/UserManagementdashboard">User Management</a></li>
    <li>Add UserGroup</li>
</ul>
<h2 class="ML15">Add UserGroup</h2>

@using (Html.BeginForm())
{
<div class="mid_content_sec">
    @Html.AntiForgeryToken()

    <div class="col-xs-6 subSelect ">
        <div class="input-field">
            @Html.Label("GroupName", new { @class = "floating-label" })
            @if (Model.Group.UserGroupId > 0)
            {
                @Html.DisplayFor(model => model.Group.UserGroupName, new { @class = "inputMaterial ui - autocomplete - input" })
            }
            else
            {
                @Html.TextBoxFor(model => model.Group.UserGroupName, new { @class = "inputMaterial ui - autocomplete - input" })
            }
        </div>
    </div>
    <div class="col-xs-6 subSelect ">
        <div class="input-field">
            @if (Model.Roles != null)
            {
                @Html.Label("Role", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(model => model.Group.UserRoleId, Model.Roles, new { @class = "inputMaterialSelect ui - autocomplete - input " })
            }
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-6 subSelect ">
        <div class="input-field">
            @Html.Label("GroupDescription", new { @class = "floating-label" })
            @Html.TextAreaFor(model => model.Group.UserGroupDescription, new { @class = "inputMaterial ui - autocomplete - input" })

        </div>
    </div>
    <div class="col-xs-6 subSelect ">
        <div class="input-field">
            @if (Model.Roles != null)
            {
                @Html.Label("Feature List", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.ListBoxFor(model => model.menuid, Model.Featurelist, new { @class = "inputMaterialSelect ui - autocomplete - input ",size=3 })
            }
        </div>
    </div>
    <div class="clearfix"></div>
    @{string button = "save";}
    <ul class="list-inline continueBtn">
        <li>
            @if (Model.Group.UserGroupId > 0)
            {
                button = "Update";
                @Html.ActionLink("Delete", "Deletegroup", routeValues: new { GroupId = Model.Group.UserGroupId })
            }

            @*<input type="submit" value=@button class="btn btn-default" />*@
            <button type="submit" class="btn primary-button" id="btnProceed" name="Button" value="Submit">@button<span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span></button>
            <input type="reset" value="Reset" class="btn primary-button" />
            <input type="submit" value="Cancel" class="btn primary-button" />
        </li>
    </ul>
</div>
        }

