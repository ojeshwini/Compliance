
@model ComplianceAuditWeb.Models.AuditViewModel
@{
    ViewBag.Title = "ComplianceAuditing";
}

@section scripts
    {
    <script type="text/javascript">

        function ShowHidedTextBox() {
            var compliancePartial = document.getElementById("complianceAuditList_1__Audit_Status");
            var percentage = document.getElementById("percentage");
            percentage.style.visibility = compliancePartial.value == "PartaillyComplianced" ? "visible" : "hidden";
        }
    </script>


}
<h2 class="ML15">Add Compliance Audit</h2>
<ul class="breadcrumb ML15">
    <li><a href="">Audit Management</a></li>
    <li>Auditing</li>
</ul>


@using (Html.BeginForm())
{



    int rulecount = 0;
    <div class="mid_content_sec">

        <div class="accordion-group" data-behavior="accordion">

            <div class="accordion-body">

                <table>
                    @for (int Act = 0; Act < Model.complianceXrefList.Count; Act++)
                    {

                        <tr>
                            <td>
                                <p class="accordion-header default-open">
                                    <i class="fa fa-legal">
                                    </i>
                                    @Html.DisplayFor(m => m.complianceXrefList[Act].Compliance_Title)
                                </p>
                            </td>
                        </tr>
                        for (int j = 0; j < Model.Section.Count; j++)
                        {


                            if (Model.complianceXrefList[Act].Compliance_Xref_ID == Model.Section[j].Compliance_Parent_ID)
                            {
                                <tr>
                                    <td>
                                        <p class="accordion-header default-open">
                                            <i class="fa fa-legal"></i>
                                            @Html.DisplayFor(m => m.Section[j].Compliance_Title)
                                        </p>
                                    </td>
                                </tr>

                                for (int i = 0; i < Model.Rules.Count(); i++)
                                {
                                    <tr>
                                        @if (Model.Section[j].Compliance_Xref_ID == Model.Rules[i].Compliance_Parent_ID)
                                        {
                                            <td>
                                                <p class="accordion-header default-open">
                                                    <i class="fa fa-leanpub"></i>
                                                    @Html.DisplayFor(m => m.Rules[i].Compliance_Title)
                                                </p>
                                            </td>
                                            {
                                                rulecount = rulecount + 1;
                                                Model.complianceAuditList[rulecount].Compliance_Xref_Id = Model.Rules[i].Compliance_Xref_ID;
                                            }

                                            <td>
                                                <div class="clearfix"></div>

                                                <div class="col-xs-8 subSelect">
                                                    <div class="input-field">
                                                        @Html.Label("Status")
                                                        @*@Html.EditorFor(m => m.complianceAuditList[rulecount].Audit_Status)*@
                                                        @*@Html.DropDownListFor(m=>m.complianceAuditList[rulecount].Audit_Status, Model.auditlists)*@

                                                        @Html.DropDownListFor(m => m.complianceAuditList[rulecount].Audit_Status, new SelectList
                                                 (Enum.GetValues(typeof(ComplianceAuditWeb.Models.AuditViewModel.AuditStatus))),
                                                 "Audit Status", new { @class = "inputMaterial ui - autocomplete - input" , @onchange = "ShowHidedTextBox(this.value);" })
                                                        @Html.ValidationMessageFor(m => m.complianceAuditList[rulecount].Audit_Status, "", new { @class = "text-danger" })

                                                        <div id="percentage" style="visibility:hidden">
                                                            percentage of partially complianced:
                                                            <input type="text" id="percentageofpartial" />

                                                        </div>
                                                    </div>
                                                </div>

                                            </td>

                                            <td>
                                                <div class="col-xs-10 subSelect ">
                                                    <div class="input-field">
                                                        @Html.Label("Penalty")
                                                        @Html.TextBoxFor(m => m.complianceAuditList[rulecount].Penalty_nc, new { @class = "inputMaterial ui - autocomplete - input" })
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-xs-10 subSelect ">
                                                    <div class="input-field">
                                                        @Html.Label("Auditing Date")
                                                        @Html.TextBoxFor(m => m.complianceAuditList[rulecount].Audit_Date, new { @class = "inputMaterial ui - autocomplete - input" })
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="clearfix"></div>
                                                <div class="col-xs-12 subSelect ">
                                                    <div class="input-field">
                                                        @Html.Label("Remarks")
                                                        @Html.TextAreaFor(m => m.complianceAuditList[rulecount].Audit_Remarks, new { @class = "inputMaterial ui - autocomplete - input" })
                                                    </div>
                                                </div>
                                            </td>
                                            @Html.HiddenFor(m => m.complianceAuditList[rulecount].Audit_ArteFacts)
                                            <td>
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Compliance_Xref_Id)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Auditor_Id)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Compliance_Audit_Id)
                                                @*@Html.HiddenFor(m => m.complianceAuditList[rulecount].Compliance_Options_Id)*@
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].User_Id)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Org_Hier_Id)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Compliance_Schedule_Instance)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Is_Active)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Reviewer_Id)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Last_Update_dDate)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Reviewer_Comments)
                                                @Html.HiddenFor(m => m.complianceAuditList[rulecount].Version)
                                            </td>
                                        }
                                    </tr>
                                    @*@Html.HiddenFor(m => m.Rules[i].Form)
                                        @Html.HiddenFor(m => m.Rules[i].City_ID)
                                        @Html.HiddenFor(m => m.Rules[i].Compliance_Parent_ID)
                                        @Html.HiddenFor(m => m.Rules[i].Compliance_Xref_ID)
                                        @Html.HiddenFor(m => m.Rules[i].compl_def_consequence)
                                        @Html.HiddenFor(m => m.Rules[i].Comp_Description)*@
                                }
                            }
                            @*@Html.HiddenFor(m => m.Section[j].Form)
                                @Html.HiddenFor(m => m.Section[j].City_ID)
                                @Html.HiddenFor(m => m.Section[j].Compliance_Parent_ID)
                                @Html.HiddenFor(m => m.Section[j].Compliance_Xref_ID)
                                @Html.HiddenFor(m => m.Section[j].compl_def_consequence)
                                @Html.HiddenFor(m => m.Section[j].Comp_Description)*@
                        }
                        @*@Html.HiddenFor(m => m.complianceXrefList[Act].Form)
                            @Html.HiddenFor(m => m.complianceXrefList[Act].City_ID)
                            @Html.HiddenFor(m => m.complianceXrefList[Act].Compliance_Parent_ID)
                            @Html.HiddenFor(m => m.complianceXrefList[Act].Compliance_Xref_ID)
                            @Html.HiddenFor(m => m.complianceXrefList[Act].compl_def_consequence)
                            @Html.HiddenFor(m => m.complianceXrefList[Act].Comp_Description)*@
                    }
                </table>

            </div>
        </div>

    </div>
    <div id='myModal' class="modal fade" role="dialog" aria-hidden="true">
        <div class="modal-dialog-centered" style="width:900px;height:400px; padding:10px;">
            <div class="modal-content" style="overflow:scroll; padding:10px;">
                <div id='myModalContent' class="modal-body" style=" padding:10px">
                </div>
            </div>
        </div>
    </div>
    @Html.Hidden(rulecount.ToString());
    { Session["rulecount"] = rulecount; };
    <input type="submit" value="Save" class="btn btn-default" />

}






